var wmajt=(function(){var F=128,K=128,J="en",e=12,f=14,n={},u={},c={},E={},v=false,q=true,O,C,M,A,G,L,p,l,P,b,Q,k=null,d=null,H={Polygon:[["natural",{ocean:1},[{fillStyle:"rgb(250,250,208)"},{lineWidth:1,strokeStyle:"rgb(125,125,104)"}]],["railway",{platform:1},[{fillStyle:"rgb(220,220,220)"}]],["landuse",{industrial:1,retail:1,commercial:1,residential:1},[{fillStyle:"rgb(208,208,208)"}]],["landuse",{reservoir:1},[{fillStyle:"rgb(200,200,224)"}]],["landuse",{military:1,railway:1},[{fillStyle:"rgb(224,200,200)"}]],["landuse",{cemetery:1,recreation_ground:1},[{fillStyle:"rgb(190,214,190)"}]],["landuse",{grass:1},[{globalAlpha:0.3,fillStyle:"rgb(0,160,0)"},{globalAlpha:1}]],["leisure",{park:1,orchard:1,meadow:1,village_green:1,golf_course:1,track:1,forrest:1,recreation_ground:1,dog_park:1,garden:1,pitch:1,stadium:1},[{fillStyle:"rgb(200,224,200)"}]],["waterway",{riverbank:1,dock:1},[{fillStyle:"rgb(158,199,243)"}]],["natural",{beach:1,sand:1},[{fillStyle:"rgb(250,242,175)"}]],["natural",{wetland:1,mud:1},[{fillStyle:"rgb(200,218,224)"}]],["natural",{grassland:1,fell:1},[{fillStyle:"rgb(200,224,200)"}]],["natural",{scrub:1},[{fillStyle:"rgb(150,214,150)"}]],["natural",{wood:1},[{fillStyle:"rgb(100,204,100)"}]],["natural",{water:1,bay:1},[{fillStyle:"rgb(158,199,243)"},{lineWidth:1,strokeStyle:"rgb(158,199,243)"}]],["natural",{glacier:1},[{fillStyle:"rgb(230,245,255)"},{lineWidth:1,strokeStyle:"rgb(255,255,255)"}]],["amenity",{university:1},[{lineWidth:0.5,strokeStyle:"rgb(240,225,183)"}]],["amenity",{parking:1},[{fillStyle:"rgb(240,235,193)"}]],["highway",{pedestrian:1},[{fillStyle:"rgb(255,255,255)"},{lineWidth:2,strokeStyle:"rgb(168,148,148)"}]],["tourism",true,[{dash:[3,3],lineWidth:2,strokeStyle:"rgb(255,255,0)"}]],["aeroway",{terminal:1},[{fillStyle:"rgb(190,210,190)"},{lineWidth:1,strokeStyle:"rgb(127,137,127)"}]],["historic",{memorial:1,monument:1,fort:1,castle:1},[{fillStyle:"rgb(255,190,190)"},{lineWidth:1,strokeStyle:"rgb(167,120,120)"}]],["historic",{ship:1,wreck:1},[{fillStyle:"rgb(255,190,235)"}]],["railway",{station:1},[{fillStyle:"rgb(210,195,195)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["natural",{water:1,bay:1},[{fillStyle:"rgb(158,199,243)"},{lineWidth:1,strokeStyle:"rgb(158,199,243)"}]],["building",true,[{fillStyle:"rgb(200,200,200)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["building:part",true,[{fillStyle:"rgb(200,200,200)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]]],LineString:[["waterway",{canal:1},[{lineCap:"butt",lineWidth:3,strokeStyle:"rgb(158,199,243)"}]],["waterway",{river:1},[{lineWidth:1.5,strokeStyle:"rgb(126,159,194)"}]],["waterway",{stream:1},[{dash:[2,2],lineWidth:1.5,strokeStyle:"rgb(126,159,194)"}]],["route",{ferry:1},[{dash:[4,4],lineWidth:2,strokeStyle:"rgb(126,159,194)"}]],["highway",{pedestrian:1},[{lineWidth:5,strokeStyle:"rgb(255,255,255)"}]],["highway",{footway:1,pedestrian:1,path:1},[{lineWidth:2,strokeStyle:"rgb(198,178,178)"}]],["highway",{steps:1},[{dash:[1.5,1.5],lineWidth:3,strokeStyle:"rgb(168,148,148)"}]],["highway",{service:1},[{lineWidth:4,strokeStyle:"rgb(168,168,168)"},{lineWidth:2.5,strokeStyle:"rgb(208,208,208)"}]],["highway",{track:1},[{lineWidth:3.5,strokeStyle:"rgb(168,168,168)"},{lineWidth:2.5,strokeStyle:"rgb(250,250,208)"}]],["highway",{residential:1,unclassified:1},[{lineWidth:4,strokeStyle:"rgb(200,200,200)"},{lineWidth:2.5,strokeStyle:"rgb(255,255,255)"}]],["highway",{tertiary:1},[{lineWidth:5,strokeStyle:"rgb(200,200,200)"},{lineWidth:3.5,strokeStyle:"rgb(255,255,235)"}]],["railway",{subway:1},[{globalAlpha:0.2,lineWidth:3,strokeStyle:"rgb(100,100,100)"},{globalAlpha:1}]],["railway",{rail:1,preserved:1,monorail:1,narrow_gauge:1},[{lineWidth:3,strokeStyle:"rgb(100,100,100)"}]],["highway",{secondary:1,secondary_link:1,primary:1,primary_link:1},[{lineCap:"round",lineWidth:6,strokeStyle:"rgb(171,158,137)"}]],["highway",{motorway:1,motorway_link:1,trunk:1,trunk_link:1},[{lineWidth:7,strokeStyle:"rgb(188,149,28)"}]],["aeroway",{runway:1},[{lineWidth:10,strokeStyle:"rgb(100,130,100)"}]],["aeroway",{taxiway:1},[{lineWidth:4.5,strokeStyle:"rgb(100,130,100)"}]],["railway",{subway:1},[{lineCap:"butt",globalAlpha:0.3,dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(255,255,255)"},{globalAlpha:1}]],["railway",{rail:1,narrow_gauge:1},[{dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(255,255,255)"}]],["railway",{preserved:1},[{dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(200,200,200)"}]],["railway",{monorail:1},[{dash:[1,2,4,2],lineWidth:1.5,strokeStyle:"rgb(200,200,200)"}]],["highway",{secondary:1,secondary_link:1},[{lineCap:"round",lineWidth:4.5,strokeStyle:"rgb(255,250,115)"}]],["highway",{primary:1,primary_link:1},[{lineWidth:4,strokeStyle:"rgb(255,230,95)"}]],["highway",{motorway:1,motorway_link:1,trunk:1,trunk_link:1},[{lineWidth:5,strokeStyle:"rgb(242,191,36)"}]],["aeroway",{runway:1},[{lineWidth:8,strokeStyle:"rgb(150,180,150)"}]],["aeroway",{taxiway:1},[{lineWidth:2.5,strokeStyle:"rgb(150,180,150)"}]],["railway",{tram:1},[{globalAlpha:0.4,dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(0,0,0)"},{globalAlpha:1}]],["access",{permissive:1},[{dash:[1,2],lineWidth:1,strokeStyle:"rgb(100,200,100)"}]],["access",{"private":1,residents:1},[{dash:[1,2],lineWidth:1,strokeStyle:"rgb(200,100,100)"}]],["building:part",true,[{lineWidth:1,strokeStyle:"rgb(127,127,255)"}]]]};function x(R,h){var w=R.concat(h),T=[],S={};for(i in w){if(w.hasOwnProperty(i)){if(!(w[i] in S)){S[w[i]]=true;T.push(w[i])}}}return T}function I(h,R,w){return h+"_"+R+"_"+w}function y(T){if(T===null){return}X=T.data;var Y,V={0:1},X,U,S;if(T.v&&T.v>=2){Y=T.idx}else{Y={};for(U=0;U<X.length;++U){for(S in X[U].tags){if(S in Y){Y[S].push(U)}else{Y[S]=[U]}}}}for(U=0;U<X.length;++U){if("layer" in X[U].tags){V[X[U].tags.layer]=1}}n[I(T.x,T.y,T.z)]={data:T.data,building:{},f:T.f||{},idx:Y,lay:V};var X=T.data,w,h=T.x,W=T.y,R;if(T.z>=f){for(w=T.z;w>=e;w--){R=n[I(h,W,w)];if(w<f&&R&&R.data){for(U=0;U<X.length;++U){if("osm_id" in X[U].tags&&("building" in X[U].tags||"building:part" in X[U].tags)&&!(X[U].tags.osm_id in R.building)){for(S in X[U].tags){if(S in R.idx){R.idx[S].push(R.data.length)}else{R.idx[S]=[R.data.length]}}R.data.push(X[U]);R.building[X[U].tags.osm_id]=1}}}h=Math.floor(h/2);W=Math.floor(W/2)}}else{}z(this.csx,this.csy,this.csz,this)}function m(T,W){if(d){if(T.length>0){var Z=(T[0][0]-O)*128/G,X=128-(T[0][1]-C)*128/L,ad,ac,V=0,U=d.length,ab=0,aa,Y,h,S,R,w;for(R=1;R<T.length;++R){W.moveTo(Z,X);S=-ab;ad=(T[R][0]-O)*128/G;ac=128-(T[R][1]-C)*128/L;aa=ad-Z;Y=ac-X;h=Math.sqrt(aa*aa+Y*Y);aa/=h;Y/=h;w=false;while(true){S+=d[V];if(S>h){w=true;ab=S-h;S=h}W[V%2?"moveTo":"lineTo"](S*aa+Z,S*Y+X);if(w){break}V=(V+1)%U}Z=ad;X=ac}}}else{if(T.length>0){W.moveTo((T[0][0]-O)*128/G,128-(T[0][1]-C)*128/L);for(R=1;R<T.length;++R){W.lineTo((T[R][0]-O)*128/G,128-(T[R][1]-C)*128/L)}}}}function D(T,U){var W=null,aa={},h=U.div.offset(),Y=T.pageX-h.left,X=T.pageY-h.top,V=U.csca.data||[],w,R,Z,ac="";function S(ah,ai,ad){var af,ae,ag;for(j=1;j<ah.length;++j){af=(ah[j][0]-O)*128/G-Y;ae=128-(ah[j][1]-C)*128/L-X;ag=af*af+ae*ae;if((W===null||ag<W)&&(("name:"+J) in ad.tags||"name" in ad.tags||"addr:street" in ad.tags)){W=ag;aa=ad}}}O=U.csx*60/(1<<U.csz);C=90-(((U.csy+1)*60)/(1<<U.csz));M=(U.csx+1)*60/(1<<U.csz);A=90-((U.csy*60)/(1<<U.csz));G=M-O;L=A-C;if(O>180){O-=360}for(R=0;R<V.length;++R){w=V[R];a(w,"Polygon",null,S);if(w.geo.type=="GeometryCollection"){a(w,"Line",null,S)}}Z=aa.tags||{};if(("name" in Z)||(("name:"+J) in Z)){ac=Z[("name:"+J)]||Z.name;if("loc_name" in Z){ac+=' "'+Z.loc_name+'"'}if("artist_name" in Z){ac+=" ("+Z.artist_name+")"}return ac}if("addr:street" in Z){ac=Z["addr:street"];if("addr:housenumber" in Z){ac=Z["addr:housenumber"]+" "+ac}return ac}var ab=["landuse","historic","highway","building"];for(R=0;R<ab.length;++R){if(ab[R] in Z){return ab[R]+" "+Z[ab[R]]}}return null}function a(h,S,V,U){var R,w,T;switch(h.geo.type){case"Polygon":U(h.geo.coordinates[0],V,h);break;case"LineString":U(h.geo.coordinates,V,h);break;case"MultiLineString":for(R=0;R<h.geo.coordinates.length;R++){U(h.geo.coordinates[R],V,h)}break;case"MultiPolygon":for(R=0;R<h.geo.coordinates.length;R++){U(h.geo.coordinates[R][0],V,h)}break;case"GeometryCollection":T=h.geo.geometries;for(w=0;w<T.length;w++){if(S==="Polygon"){switch(T[w].type){case"Polygon":U(T[w].coordinates[0],V,h);break;case"MultiPolygon":for(R=0;R<T[w].coordinates.length;R++){U(T[w].coordinates[R][0],V,h)}break}}else{switch(T[w].type){case"LineString":U(T[w].coordinates,V,h);break;case"MultiLineString":for(R=0;R<T[w].coordinates.length;R++){U(T[w].coordinates[R],V,h)}break}}}break}}function z(T,S,w,aj,V){var ag=aj.ctx,ab=false,ac,Z,ae,ad,W;O=T*60/(1<<w);C=90-(((S+1)*60)/(1<<w));M=(T+1)*60/(1<<w);A=90-((S*60)/(1<<w));G=M-O;L=A-C;if(O>180){O-=360}function R(an){var ap,ao,am,aq,au,ak,ar=an.data,al,at;ag.lineWidth=1;ag.fillStyle="rgb(158,199,243)";ag.fillRect(0,0,128,128);for(au in H){for(ak=0;ak<H[au].length;ak++){ag.beginPath();if(!(H[au][ak][0] in an.idx)){continue}d=H[au][ak][2][0].dash||null;at=an.idx[H[au][ak][0]];for(ap=0;ap<at.length;++ap){al=ar[at[ap]];if((au!==al.geo.type&&("Multi"+au)!==al.geo.type&&al.geo.type!=="GeometryCollection")||!(H[au][ak][1]===true||al.tags[H[au][ak][0]] in H[au][ak][1])){continue}a(al,au,ag,m)}aq=H[au][ak][2];for(ap=0;ap<aq.length;ap++){for(ao in aq[ap]){if(ao!="dash"){ag[ao]=aq[ap][ao]}}if("strokeStyle" in aq[ap]){ag.stroke()}if("fillStyle" in aq[ap]){ag.fill()}}}}}function ai(al){var ak;if(al===undefined){return null}ak=/^(\d+(\.\d*)?)(\s*m)?$/.exec(al);if(ak!==null){return parseFloat(ak[1])}ak=/^((\d+(\.\d*)?)')?((\d+(\.\d*)?)")?$/.exec(al);if(ak!==null){return parseFloat(ak[2]||"0")*0.3048+parseFloat(ak[5]||"0")*0.0254}return 0}aj.csx=T;aj.csy=S;aj.csz=w;var ah,h=T,Y=S,aa,af,U,X;for(ah=w;ah>=e;ah--){aa=n[I(h,Y,ah)];if(aa&&aa.data&&!V){if(aj.csca){af=aj.csca.data;if(v&&"start_date" in aj.csca.idx){X=aj.csca.idx.start_date;for(i=0;i<X.length;++i){U=af[X[i]].tags.start_date;if(U in u){u[U]--;if(u[U]==0){delete u[U]}}}}if(q&&w>f){X=x(aj.csca.idx["building:levels"]||[],aj.csca.idx.height||[]);for(i=0;i<X.length;++i){if("osm_id" in af[X[i]].tags){U=af[X[i]].tags.osm_id;if(U in c){c[U]--;if(c[U]==0){delete c[U]}}}}}}R(aa);aj.csca=aa;af=aa.data;if(v&&"start_date" in aa.idx){X=aa.idx.start_date;for(i=0;i<X.length;++i){U=af[X[i]].tags.start_date;u[U]=(u[U]||0)+1}}if(q&&w>f){X=x(aa.idx["building:levels"]||[],aa.idx.height||[]);for(i=0;i<X.length;++i){if("osm_id" in af[X[i]].tags){U=af[X[i]].tags.osm_id;c[U]=(c[U]||0)+1;if(!(U in E)){E[U]=af[X[i]]}}}}if(k!==null){X=x(aa.idx["building:levels"]||[],aa.idx.height||[]);for(i=0;i<X.length;++i){if("osm_id" in af[X[i]].tags){U=af[X[i]].tags.osm_id;if(!(U in c)){c[U]=true;U=af[X[i]];ac=ai(U.tags.height)||(U.tags["building:levels"]*3);Z=ai(U.tags.min_height)||(U.tags["building:min_level"]*3)||0;if(U.geo.type==="Polygon"){ae=U.geo.coordinates}else{if(U.geo.type==="LineString"){ae=[U.geo.coordinates]}else{continue}}ab=true;if(U.tags["building:shape"]==="pyramid"){t(ae,Z,ac);continue}if(("roof:shape" in U.tags)&&("roof:height" in U.tags)){ad=ai(U.tags["roof:height"]);W=U.tags["roof:shape"];if(W==="pyramidal"){if(ad<ac){g(ae,Z,ac-ad,true)}t(ae,ac-ad,ac);continue}if(ae[0].length==5){if(W==="gabled"||W==="hilted"){if(ad<ac){g(ae,Z,ac-ad,true)}N(ae,ac-ad,ac);continue}}}g(ae,Z,ac)}}}}aj.can.show();if(ab){B()}if(w<f||ah>=f){return}}h=Math.floor(h/2);Y=Math.floor(Y/2)}aj.debug.html("tiles/jsontile.php?x="+T+"&y="+S+"&z="+w);$.ajax({url:"tiles/jsontile.php?x="+T+"&y="+S+"&z="+w+(V===true?"&action=purge":""),dataType:"json",success:y,context:aj})}function o(h,S,R){glArrList=[];l=[];P=h;k=S;p=R;var T,w;b=0;Q=0;T=new Float32Array(P*9);w=new Float32Array(P*9);glArrList.push({v:T,n:w});q=false}function B(){var R,w,T,h,S;if(glArrList.length>l.length||b>Q){S=l.length-1;S=S<0?0:S;for(R=S;R<glArrList.length;++R){if(R>=l.length){T=k.createBuffer();h=k.createBuffer();l.push({v:T,n:h})}else{T=l[R].v;h=l[R].n}k.bindBuffer(k.ARRAY_BUFFER,T);k.bufferData(k.ARRAY_BUFFER,glArrList[R].v,k.STATIC_DRAW);k.bindBuffer(k.ARRAY_BUFFER,h);k.bufferData(k.ARRAY_BUFFER,glArrList[R].n,k.STATIC_DRAW)}Q=b}w=l.length-1;for(R=0;R<=w;++R){k.bindBuffer(k.ARRAY_BUFFER,l[R].n);k.vertexAttribPointer(p.normalPosAttrib,3,k.FLOAT,false,0,0);k.bindBuffer(k.ARRAY_BUFFER,l[R].v);k.vertexAttribPointer(p.vertexPosAttrib,3,k.FLOAT,false,0,0);k.drawArrays(k.TRIANGLES,0,((R==w)?Q:P)*3)}}function s(R,V){var h=R.length/9,U=P,T,S,w,V;T=glArrList.length-1;if(b+h<=U){glArrList[T].v.set(R,b*9);glArrList[T].n.set(V,b*9);b+=h}else{for(S=0;S<h;++S){for(w=0;w<9;++w){glArrList[T].v[b*9+w]=R[S*9+w]}b++;if(b==U){b=0;glArrList.push({v:new Float32Array(P*9),n:new Float32Array(P*9)});T++}}}if(b==U){b=0;glArrList.push({v:new Float32Array(P*9),n:new Float32Array(P*9)})}}function N(ag,aj,ac,w){var ai,ab,aa,Z,Y,V,U=[],T=[],S,X,R,W,ad,ah,af,ae;ai=ag[0];for(ab=0;ab<4;++ab){S=ai[ab][0]-ai[ab+1][0],X=ai[ab][1]-ai[ab+1][1];V[ab]=Math.sqrt(S*S+X*X)}aa=(V[0]+V[2]>V[1]+V[3])?0:1;U[0]=0.5*(ai[aa][0]+ai[aa+3][0]);T[0]=0.5*(ai[aa][1]+ai[aa+3][1]);U[1]=0.5*(ai[aa+1][0]+ai[aa+2][0]);T[1]=0.5*(ai[aa+1][1]+ai[aa+2][1]);ad=ac-aj;for(Z=0;Z<2;++Z){ab=Z*2+aa;S=ai[ab][0]-ai[ab+1][0];X=ai[ab][1]-ai[ab+1][1];R=U[Z]-ai[ab][0];W=T[Z]-ai[ab][1];ah=-X*ad;af=S*ad;ae=X*R-S*W;r=Math.sqrt(ah*ah+af*af+ae*ae);ah/=r;af/=r;ae/=r;s([ai[ab][0],ai[ab][1],aj,ai[ab+1][0],ai[ab+1][1],aj,U[Z],T[Z],ac],[ah,af,ae,ah,af,ae,ah,af,ae]);s([U[Z],T[Z],ac,U[(Z+1)%2],T[(Z+1)%2],ac,ai[ab+1][0],ai[ab+1][1],aj],[ah,af,ae,ah,af,ae,ah,af,ae])}}function t(ac,ae,Z){var ad,W,U,S,T=0,R=0,ag,ab,af,Y,w,aa,X,V;ad=ac[0];S=ad.length-1;area=0;if(S<3){return}for(W=0;W<S;W++){area+=(ad[W][0]*ad[W+1][1])-(ad[W+1][0]*ad[W][1]);T+=ad[W][0];R+=ad[W][1]}if(area>0){ad.reverse()}T/=S;R/=S;w=Z-ae;for(W=0;W<S;W++){ag=ad[W][0]-ad[W+1][0];ab=ad[W][1]-ad[W+1][1];af=T-ad[W][0];Y=R-ad[W][1];aa=-ab*w;X=ag*w;V=ab*af-ag*Y;r=Math.sqrt(aa*aa+X*X+V*V);aa/=r;X/=r;V/=r;s([ad[W][0],ad[W][1],ae,ad[W+1][0],ad[W+1][1],ae,T,R,Z],[aa,X,V,aa,X,V,aa,X,V])}}function g(ae,ag,ac,ai){var S,R,af,ab,aa,Z,V,ad,X,W;ai=~~ai;for(aa=0;aa<ae.length;++aa){af=ae[aa];Z=af.length-1;ad=0;if(Z<3){return}for(ab=0;ab<Z;ab++){ad+=(af[ab][0]*af[ab+1][1])-(af[ab+1][0]*af[ab][1])}ad*=(aa==0)?1:-1;if(ad>0){af.reverse()}}for(aa=0;aa<ae.length;++aa){af=ae[aa];Z=af.length-1;for(ab=0;ab<Z;ab++){X=af[ab][0]-af[ab+1][0];W=af[ab][1]-af[ab+1][1];r=Math.sqrt(X*X+W*W);X/=r;W/=r;s([af[ab][0],af[ab][1],ag,af[ab+1][0],af[ab+1][1],ag,af[ab][0],af[ab][1],ac],[-W,X,0,-W,X,0,-W,X,0]);s([af[ab][0],af[ab][1],ac,af[ab+1][0],af[ab+1][1],ac,af[ab+1][0],af[ab+1][1],ag],[-W,X,0,-W,X,0,-W,X,0])}}if(ai){return}if(ae.length===1&&ae[0].length<=5){af=ae[0];if(af.length==4){s([af[0][0],af[0][1],ac,af[1][0],af[1][1],ac,af[2][0],af[2][1],ac],[0,0,1,0,0,1,0,0,1])}else{s([af[0][0],af[0][1],ac,af[1][0],af[1][1],ac,af[2][0],af[2][1],ac,af[0][0],af[0][1],ac,af[2][0],af[2][1],ac,af[3][0],af[3][1],ac],[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1])}return}var w=[],ah=[];af=ae[0];Z=af.length-1;for(ab=0;ab<Z;ab++){w.push(new p2t.Point(af[ab][0],af[ab][1]))}var U=new p2t.SweepContext(w);for(aa=1;aa<ae.length;++aa){af=ae[aa];Z=af.length-1;var Y=[];for(ab=0;ab<Z;ab++){Y.push(new p2t.Point(af[ab][0],af[ab][1]))}U.AddHole(Y)}p2t.sweep.Triangulate(U);S=U.GetTriangles();for(ab=0;ab<S.length;++ab){var T=[S[ab].GetPoint(0),S[ab].GetPoint(1),S[ab].GetPoint(2)];s([T[0].x,T[0].y,ac,T[1].x,T[1].y,ac,T[2].x,T[2].y,ac],[0,0,1,0,0,1,0,0,1])}}return{update:z,detectPointer:D,ref_z:function(){return c},zbuild:function(){return E},registerWebGLBuildingData:o,renderWebGLBuildingData:B,setUILang:function(h){J=h}}})();