var wmajt=(function(){var F=128,K=128,J="en",e=12,f=14,n={},u={},c={},E={},v=false,q=true,N,C,M,A,G,L,p,l,O,b,P,k=null,d=null,H={Polygon:[["natural",{ocean:1},[{fillStyle:"rgb(250,250,208)"},{lineWidth:1,strokeStyle:"rgb(125,125,104)"}]],["railway",{platform:1},[{fillStyle:"rgb(220,220,220)"}]],["landuse",{industrial:1,retail:1,commercial:1,residential:1},[{fillStyle:"rgb(208,208,208)"}]],["landuse",{reservoir:1},[{fillStyle:"rgb(200,200,224)"}]],["landuse",{military:1,railway:1},[{fillStyle:"rgb(224,200,200)"}]],["landuse",{cemetery:1,recreation_ground:1},[{fillStyle:"rgb(190,214,190)"}]],["landuse",{grass:1},[{globalAlpha:0.3,fillStyle:"rgb(0,160,0)"},{globalAlpha:1}]],["leisure",{park:1,orchard:1,meadow:1,village_green:1,golf_course:1,track:1,forrest:1,recreation_ground:1,dog_park:1,garden:1,pitch:1,stadium:1},[{fillStyle:"rgb(200,224,200)"}]],["waterway",{riverbank:1,dock:1},[{fillStyle:"rgb(158,199,243)"}]],["natural",{beach:1,sand:1},[{fillStyle:"rgb(250,242,175)"}]],["natural",{wetland:1,mud:1},[{fillStyle:"rgb(200,218,224)"}]],["natural",{grassland:1,fell:1},[{fillStyle:"rgb(200,224,200)"}]],["natural",{scrub:1},[{fillStyle:"rgb(150,214,150)"}]],["natural",{wood:1},[{fillStyle:"rgb(100,204,100)"}]],["natural",{water:1,bay:1},[{fillStyle:"rgb(158,199,243)"},{lineWidth:1,strokeStyle:"rgb(158,199,243)"}]],["natural",{glacier:1},[{fillStyle:"rgb(230,245,255)"},{lineWidth:1,strokeStyle:"rgb(255,255,255)"}]],["amenity",{university:1},[{lineWidth:0.5,strokeStyle:"rgb(240,225,183)"}]],["amenity",{parking:1},[{fillStyle:"rgb(240,235,193)"}]],["highway",{pedestrian:1},[{fillStyle:"rgb(255,255,255)"},{lineWidth:2,strokeStyle:"rgb(168,148,148)"}]],["tourism",true,[{dash:[3,3],lineWidth:2,strokeStyle:"rgb(255,255,0)"}]],["aeroway",{terminal:1},[{fillStyle:"rgb(190,210,190)"},{lineWidth:1,strokeStyle:"rgb(127,137,127)"}]],["historic",{memorial:1,monument:1,fort:1,castle:1},[{fillStyle:"rgb(255,190,190)"},{lineWidth:1,strokeStyle:"rgb(167,120,120)"}]],["historic",{ship:1,wreck:1},[{fillStyle:"rgb(255,190,235)"}]],["railway",{station:1},[{fillStyle:"rgb(210,195,195)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["natural",{water:1,bay:1},[{fillStyle:"rgb(158,199,243)"},{lineWidth:1,strokeStyle:"rgb(158,199,243)"}]],["building",true,[{fillStyle:"rgb(200,200,200)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["building:part",true,[{fillStyle:"rgb(200,200,200)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]]],LineString:[["waterway",{canal:1},[{lineCap:"butt",lineWidth:3,strokeStyle:"rgb(158,199,243)"}]],["waterway",{river:1},[{lineWidth:1.5,strokeStyle:"rgb(126,159,194)"}]],["waterway",{stream:1},[{dash:[2,2],lineWidth:1.5,strokeStyle:"rgb(126,159,194)"}]],["route",{ferry:1},[{dash:[4,4],lineWidth:2,strokeStyle:"rgb(126,159,194)"}]],["highway",{pedestrian:1},[{lineWidth:5,strokeStyle:"rgb(255,255,255)"}]],["highway",{footway:1,pedestrian:1,path:1},[{lineWidth:2,strokeStyle:"rgb(198,178,178)"}]],["highway",{steps:1},[{dash:[1.5,1.5],lineWidth:3,strokeStyle:"rgb(168,148,148)"}]],["highway",{service:1},[{lineWidth:4,strokeStyle:"rgb(168,168,168)"},{lineWidth:2.5,strokeStyle:"rgb(208,208,208)"}]],["highway",{track:1},[{lineWidth:3.5,strokeStyle:"rgb(168,168,168)"},{lineWidth:2.5,strokeStyle:"rgb(250,250,208)"}]],["highway",{residential:1,unclassified:1},[{lineWidth:4,strokeStyle:"rgb(200,200,200)"},{lineWidth:2.5,strokeStyle:"rgb(255,255,255)"}]],["highway",{tertiary:1},[{lineWidth:5,strokeStyle:"rgb(200,200,200)"},{lineWidth:3.5,strokeStyle:"rgb(255,255,235)"}]],["railway",{subway:1},[{globalAlpha:0.2,lineWidth:3,strokeStyle:"rgb(100,100,100)"},{globalAlpha:1}]],["railway",{rail:1,preserved:1,monorail:1,narrow_gauge:1},[{lineWidth:3,strokeStyle:"rgb(100,100,100)"}]],["highway",{secondary:1,secondary_link:1,primary:1,primary_link:1},[{lineCap:"round",lineWidth:6,strokeStyle:"rgb(171,158,137)"}]],["highway",{motorway:1,motorway_link:1,trunk:1,trunk_link:1},[{lineWidth:7,strokeStyle:"rgb(188,149,28)"}]],["aeroway",{runway:1},[{lineWidth:10,strokeStyle:"rgb(100,130,100)"}]],["aeroway",{taxiway:1},[{lineWidth:4.5,strokeStyle:"rgb(100,130,100)"}]],["railway",{subway:1},[{lineCap:"butt",globalAlpha:0.3,dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(255,255,255)"},{globalAlpha:1}]],["railway",{rail:1,narrow_gauge:1},[{dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(255,255,255)"}]],["railway",{preserved:1},[{dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(200,200,200)"}]],["railway",{monorail:1},[{dash:[1,2,4,2],lineWidth:1.5,strokeStyle:"rgb(200,200,200)"}]],["highway",{secondary:1,secondary_link:1},[{lineCap:"round",lineWidth:4.5,strokeStyle:"rgb(255,250,115)"}]],["highway",{primary:1,primary_link:1},[{lineWidth:4,strokeStyle:"rgb(255,230,95)"}]],["highway",{motorway:1,motorway_link:1,trunk:1,trunk_link:1},[{lineWidth:5,strokeStyle:"rgb(242,191,36)"}]],["aeroway",{runway:1},[{lineWidth:8,strokeStyle:"rgb(150,180,150)"}]],["aeroway",{taxiway:1},[{lineWidth:2.5,strokeStyle:"rgb(150,180,150)"}]],["railway",{tram:1},[{globalAlpha:0.4,dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(0,0,0)"},{globalAlpha:1}]],["access",{permissive:1},[{dash:[1,2],lineWidth:1,strokeStyle:"rgb(100,200,100)"}]],["access",{"private":1,residents:1},[{dash:[1,2],lineWidth:1,strokeStyle:"rgb(200,100,100)"}]],["building:part",true,[{lineWidth:1,strokeStyle:"rgb(127,127,255)"}]]]};function x(Q,h){var w=Q.concat(h),S=[],R={};for(i in w){if(w.hasOwnProperty(i)){if(!(w[i] in R)){R[w[i]]=true;S.push(w[i])}}}return S}function I(h,Q,w){return h+"_"+Q+"_"+w}function y(S){if(S===null){return}W=S.data;var X,U={0:1},W,T,R;if(S.v&&S.v>=2){X=S.idx}else{X={};for(T=0;T<W.length;++T){for(R in W[T].tags){if(R in X){X[R].push(T)}else{X[R]=[T]}}}}for(T=0;T<W.length;++T){if("layer" in W[T].tags){U[W[T].tags.layer]=1}}n[I(S.x,S.y,S.z)]={data:S.data,building:{},f:S.f||{},idx:X,lay:U};var W=S.data,w,h=S.x,V=S.y,Q;if(S.z>=f){for(w=S.z;w>=e;w--){Q=n[I(h,V,w)];if(w<f&&Q&&Q.data){for(T=0;T<W.length;++T){if("osm_id" in W[T].tags&&("building" in W[T].tags||"building:part" in W[T].tags)&&!(W[T].tags.osm_id in Q.building)){for(R in W[T].tags){if(R in Q.idx){Q.idx[R].push(Q.data.length)}else{Q.idx[R]=[Q.data.length]}}Q.data.push(W[T]);Q.building[W[T].tags.osm_id]=1}}}h=Math.floor(h/2);V=Math.floor(V/2)}}else{}z(this.csx,this.csy,this.csz,this)}function m(S,V){if(d){if(S.length>0){var Y=(S[0][0]-N)*128/G,W=128-(S[0][1]-C)*128/L,ac,ab,U=0,T=d.length,aa=0,Z,X,h,R,Q,w;for(Q=1;Q<S.length;++Q){V.moveTo(Y,W);R=-aa;ac=(S[Q][0]-N)*128/G;ab=128-(S[Q][1]-C)*128/L;Z=ac-Y;X=ab-W;h=Math.sqrt(Z*Z+X*X);Z/=h;X/=h;w=false;while(true){R+=d[U];if(R>h){w=true;aa=R-h;R=h}V[U%2?"moveTo":"lineTo"](R*Z+Y,R*X+W);if(w){break}U=(U+1)%T}Y=ac;W=ab}}}else{if(S.length>0){V.moveTo((S[0][0]-N)*128/G,128-(S[0][1]-C)*128/L);for(Q=1;Q<S.length;++Q){V.lineTo((S[Q][0]-N)*128/G,128-(S[Q][1]-C)*128/L)}}}}function D(S,T){var V=null,Z={},h=T.div.offset(),X=S.pageX-h.left,W=S.pageY-h.top,U=T.csca.data||[],w,Q,Y,ab="";function R(ag,ah,ac){var ae,ad,af;for(j=1;j<ag.length;++j){ae=(ag[j][0]-N)*128/G-X;ad=128-(ag[j][1]-C)*128/L-W;af=ae*ae+ad*ad;if((V===null||af<V)&&(("name:"+J) in ac.tags||"name" in ac.tags||"addr:street" in ac.tags)){V=af;Z=ac}}}N=T.csx*60/(1<<T.csz);C=90-(((T.csy+1)*60)/(1<<T.csz));M=(T.csx+1)*60/(1<<T.csz);A=90-((T.csy*60)/(1<<T.csz));G=M-N;L=A-C;if(N>180){N-=360}for(Q=0;Q<U.length;++Q){w=U[Q];a(w,"Polygon",null,R);if(w.geo.type=="GeometryCollection"){a(w,"Line",null,R)}}Y=Z.tags||{};if("name" in Y){ab=Y.name;if("loc_name" in Y){ab+=' "'+Y.loc_name+'"'}if("artist_name" in Y){ab+=" ("+Y.artist_name+")"}return ab}if("addr:street" in Y){ab=Y["addr:street"];if("addr:housenumber" in Y){ab=Y["addr:housenumber"]+" "+ab}return ab}var aa=["landuse","historic","highway","building"];for(Q=0;Q<aa.length;++Q){if(aa[Q] in Y){return aa[Q]+" "+Y[aa[Q]]}}return null}function a(h,R,U,T){var Q,w,S;switch(h.geo.type){case"Polygon":T(h.geo.coordinates[0],U,h);break;case"LineString":T(h.geo.coordinates,U,h);break;case"MultiLineString":for(Q=0;Q<h.geo.coordinates.length;Q++){T(h.geo.coordinates[Q],U,h)}break;case"MultiPolygon":for(Q=0;Q<h.geo.coordinates.length;Q++){T(h.geo.coordinates[Q][0],U,h)}break;case"GeometryCollection":S=h.geo.geometries;for(w=0;w<S.length;w++){if(R==="Polygon"){switch(S[w].type){case"Polygon":T(S[w].coordinates[0],U,h);break;case"MultiPolygon":for(Q=0;Q<S[w].coordinates.length;Q++){T(S[w].coordinates[Q][0],U,h)}break}}else{switch(S[w].type){case"LineString":T(S[w].coordinates,U,h);break;case"MultiLineString":for(Q=0;Q<S[w].coordinates.length;Q++){T(S[w].coordinates[Q],U,h)}break}}}break}}function z(S,R,w,ah,U){var ae=ah.ctx,Z=false,aa,X,ac,ab;N=S*60/(1<<w);C=90-(((R+1)*60)/(1<<w));M=(S+1)*60/(1<<w);A=90-((R*60)/(1<<w));G=M-N;L=A-C;if(N>180){N-=360}function Q(al){var an,am,ak,ao,ar,ai,ap=al.data,aj,aq;ae.lineWidth=1;ae.fillStyle="rgb(158,199,243)";ae.fillRect(0,0,128,128);for(ar in H){for(ai=0;ai<H[ar].length;ai++){ae.beginPath();if(!(H[ar][ai][0] in al.idx)){continue}d=H[ar][ai][2][0].dash||null;aq=al.idx[H[ar][ai][0]];for(an=0;an<aq.length;++an){aj=ap[aq[an]];if((ar!==aj.geo.type&&("Multi"+ar)!==aj.geo.type&&aj.geo.type!=="GeometryCollection")||!(H[ar][ai][1]===true||aj.tags[H[ar][ai][0]] in H[ar][ai][1])){continue}a(aj,ar,ae,m)}ao=H[ar][ai][2];for(an=0;an<ao.length;an++){for(am in ao[an]){if(am!="dash"){ae[am]=ao[an][am]}}if("strokeStyle" in ao[an]){ae.stroke()}if("fillStyle" in ao[an]){ae.fill()}}}}}function ag(aj){var ai;if(aj===undefined){return null}ai=/^(\d+(\.\d*)?)(\s*m)?$/.exec(aj);if(ai!==null){return parseFloat(ai[1])}ai=/^((\d+(\.\d*)?)')?((\d+(\.\d*)?)")?$/.exec(aj);if(ai!==null){return parseFloat(ai[2]||"0")*0.3048+parseFloat(ai[5]||"0")*0.0254}return 0}ah.csx=S;ah.csy=R;ah.csz=w;var af,h=S,W=R,Y,ad,T,V;for(af=w;af>=e;af--){Y=n[I(h,W,af)];if(Y&&Y.data&&!U){if(ah.csca){ad=ah.csca.data;if(v&&"start_date" in ah.csca.idx){V=ah.csca.idx.start_date;for(i=0;i<V.length;++i){T=ad[V[i]].tags.start_date;if(T in u){u[T]--;if(u[T]==0){delete u[T]}}}}if(q&&w>f){V=x(ah.csca.idx["building:levels"]||[],ah.csca.idx.height||[]);for(i=0;i<V.length;++i){if("osm_id" in ad[V[i]].tags){T=ad[V[i]].tags.osm_id;if(T in c){c[T]--;if(c[T]==0){delete c[T]}}}}}}Q(Y);ah.csca=Y;ad=Y.data;if(v&&"start_date" in Y.idx){V=Y.idx.start_date;for(i=0;i<V.length;++i){T=ad[V[i]].tags.start_date;u[T]=(u[T]||0)+1}}if(q&&w>f){V=x(Y.idx["building:levels"]||[],Y.idx.height||[]);for(i=0;i<V.length;++i){if("osm_id" in ad[V[i]].tags){T=ad[V[i]].tags.osm_id;c[T]=(c[T]||0)+1;if(!(T in E)){E[T]=ad[V[i]]}}}}if(k!==null){V=x(Y.idx["building:levels"]||[],Y.idx.height||[]);for(i=0;i<V.length;++i){if("osm_id" in ad[V[i]].tags){T=ad[V[i]].tags.osm_id;if(!(T in c)){c[T]=true;T=ad[V[i]];aa=ag(T.tags.height)||(T.tags["building:levels"]*3);X=ag(T.tags.min_height)||(T.tags["building:min_level"]*3)||0;if(T.geo.type==="Polygon"){ac=T.geo.coordinates}else{if(T.geo.type==="LineString"){ac=[T.geo.coordinates]}else{continue}}Z=true;if(T.tags["building:shape"]==="pyramid"){t(ac,X,aa);continue}if(("roof:shape" in T.tags)&&("roof:height" in T.tags)){ab=ag(T.tags["roof:height"]);if(T.tags["roof:shape"]==="pyramidal"){if(ab<aa){g(ac,X,aa-ab,true)}t(ac,aa-ab,aa);continue}}g(ac,X,aa)}}}}ah.can.show();if(Z){B()}if(w<f||af>=f){return}}h=Math.floor(h/2);W=Math.floor(W/2)}ah.debug.html("tiles/jsontile.php?x="+S+"&y="+R+"&z="+w);$.ajax({url:"tiles/jsontile.php?x="+S+"&y="+R+"&z="+w+(U===true?"&action=purge":""),dataType:"json",success:y,context:ah})}function o(h,R,Q){glArrList=[];l=[];O=h;k=R;p=Q;var S,w;b=0;P=0;S=new Float32Array(O*9);w=new Float32Array(O*9);glArrList.push({v:S,n:w});q=false}function B(){var Q,w,S,h,R;if(glArrList.length>l.length||b>P){R=l.length-1;R=R<0?0:R;for(Q=R;Q<glArrList.length;++Q){if(Q>=l.length){S=k.createBuffer();h=k.createBuffer();l.push({v:S,n:h})}else{S=l[Q].v;h=l[Q].n}k.bindBuffer(k.ARRAY_BUFFER,S);k.bufferData(k.ARRAY_BUFFER,glArrList[Q].v,k.STATIC_DRAW);k.bindBuffer(k.ARRAY_BUFFER,h);k.bufferData(k.ARRAY_BUFFER,glArrList[Q].n,k.STATIC_DRAW)}P=b}w=l.length-1;for(Q=0;Q<=w;++Q){k.bindBuffer(k.ARRAY_BUFFER,l[Q].n);k.vertexAttribPointer(p.normalPosAttrib,3,k.FLOAT,false,0,0);k.bindBuffer(k.ARRAY_BUFFER,l[Q].v);k.vertexAttribPointer(p.vertexPosAttrib,3,k.FLOAT,false,0,0);k.drawArrays(k.TRIANGLES,0,((Q==w)?P:O)*3)}}function s(Q,U){var h=Q.length/9,T=O,S,R,w,U;S=glArrList.length-1;if(b+h<=T){glArrList[S].v.set(Q,b*9);glArrList[S].n.set(U,b*9);b+=h}else{for(R=0;R<h;++R){for(w=0;w<9;++w){glArrList[S].v[b*9+w]=Q[R*9+w]}b++;if(b==T){b=0;glArrList.push({v:new Float32Array(O*9),n:new Float32Array(O*9)});S++}}}if(b==T){b=0;glArrList.push({v:new Float32Array(O*9),n:new Float32Array(O*9)})}}function t(ab,ad,Y){var ac,V,T,R,S=0,Q=0,af,aa,ae,X,w,Z,W,U;ac=ab[0];R=ac.length-1;area=0;if(R<3){return}for(V=0;V<R;V++){area+=(ac[V][0]*ac[V+1][1])-(ac[V+1][0]*ac[V][1]);S+=ac[V][0];Q+=ac[V][1]}if(area>0){ac.reverse()}S/=R;Q/=R;for(V=0;V<R;V++){af=ac[V][0]-ac[V+1][0];aa=ac[V][1]-ac[V+1][1];ae=S-ac[V][0];X=Q-ac[V][1];w=Y-ad;Z=-aa*w;W=af*w;U=aa*ae-af*X;r=Math.sqrt(Z*Z+W*W+U*U);Z/=r;W/=r;U/=r;s([ac[V][0],ac[V][1],ad,ac[V+1][0],ac[V+1][1],ad,S,Q,Y],[Z,W,U,Z,W,U,Z,W,U])}}function g(ad,af,ab,ah){var R,Q,ae,aa,Z,Y,U,ac,W,V;ah=~~ah;for(Z=0;Z<ad.length;++Z){ae=ad[Z];Y=ae.length-1;ac=0;if(Y<3){return}for(aa=0;aa<Y;aa++){ac+=(ae[aa][0]*ae[aa+1][1])-(ae[aa+1][0]*ae[aa][1])}ac*=(Z==0)?1:-1;if(ac>0){ae.reverse()}}for(Z=0;Z<ad.length;++Z){ae=ad[Z];Y=ae.length-1;for(aa=0;aa<Y;aa++){W=ae[aa][0]-ae[aa+1][0];V=ae[aa][1]-ae[aa+1][1];r=Math.sqrt(W*W+V*V);W/=r;V/=r;s([ae[aa][0],ae[aa][1],af,ae[aa+1][0],ae[aa+1][1],af,ae[aa][0],ae[aa][1],ab],[-V,W,0,-V,W,0,-V,W,0]);s([ae[aa][0],ae[aa][1],ab,ae[aa+1][0],ae[aa+1][1],ab,ae[aa+1][0],ae[aa+1][1],af],[-V,W,0,-V,W,0,-V,W,0])}}if(ah){return}if(ad.length===1&&ad[0].length<=5){ae=ad[0];if(ae.length==4){s([ae[0][0],ae[0][1],ab,ae[1][0],ae[1][1],ab,ae[2][0],ae[2][1],ab],[0,0,1,0,0,1,0,0,1])}else{s([ae[0][0],ae[0][1],ab,ae[1][0],ae[1][1],ab,ae[2][0],ae[2][1],ab,ae[0][0],ae[0][1],ab,ae[2][0],ae[2][1],ab,ae[3][0],ae[3][1],ab],[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1])}return}var w=[],ag=[];ae=ad[0];Y=ae.length-1;for(aa=0;aa<Y;aa++){w.push(new p2t.Point(ae[aa][0],ae[aa][1]))}var T=new p2t.SweepContext(w);for(Z=1;Z<ad.length;++Z){ae=ad[Z];Y=ae.length-1;var X=[];for(aa=0;aa<Y;aa++){X.push(new p2t.Point(ae[aa][0],ae[aa][1]))}T.AddHole(X)}p2t.sweep.Triangulate(T);R=T.GetTriangles();for(aa=0;aa<R.length;++aa){var S=[R[aa].GetPoint(0),R[aa].GetPoint(1),R[aa].GetPoint(2)];s([S[0].x,S[0].y,ab,S[1].x,S[1].y,ab,S[2].x,S[2].y,ab],[0,0,1,0,0,1,0,0,1])}}return{update:z,detectPointer:D,ref_z:function(){return c},zbuild:function(){return E},registerWebGLBuildingData:o,renderWebGLBuildingData:B,setUILang:function(h){J=h}}})();