var wmajt=(function(){var t=128,H=128,m=12,q=14,x={},d={},v={},B={},M=false,C=true,a,o,N,n,I,g,s,f,J,k,b,F=null,u=null,G={Polygon:[["natural",{ocean:1},[{fillStyle:"rgb(250,250,208)"},{lineWidth:1,strokeStyle:"rgb(125,125,104)"}]],["railway",{platform:1},[{fillStyle:"rgb(220,220,220)"}]],["landuse",{industrial:1,retail:1,commercial:1,residential:1},[{fillStyle:"rgb(208,208,208)"}]],["landuse",{reservoir:1},[{fillStyle:"rgb(200,200,224)"}]],["landuse",{military:1,railway:1},[{fillStyle:"rgb(224,200,200)"}]],["landuse",{cemetery:1,recreation_ground:1},[{fillStyle:"rgb(190,214,190)"}]],["landuse",{grass:1},[{globalAlpha:0.3,fillStyle:"rgb(0,160,0)"},{globalAlpha:1}]],["leisure",{park:1,orchard:1,meadow:1,village_green:1,golf_course:1,track:1,forrest:1,recreation_ground:1,dog_park:1,garden:1,pitch:1,stadium:1},[{fillStyle:"rgb(200,224,200)"}]],["waterway",{riverbank:1,dock:1},[{fillStyle:"rgb(158,199,243)"}]],["natural",{beach:1},[{fillStyle:"rgb(224,224,200)"}]],["natural",{wetland:1,mud:1},[{fillStyle:"rgb(200,218,224)"}]],["natural",{grassland:1,fell:1},[{fillStyle:"rgb(200,224,200)"}]],["natural",{scrub:1},[{fillStyle:"rgb(150,214,150)"}]],["natural",{wood:1},[{fillStyle:"rgb(100,204,100)"}]],["natural",{water:1,bay:1},[{fillStyle:"rgb(158,199,243)"},{lineWidth:1,strokeStyle:"rgb(158,199,243)"}]],["natural",{glacier:1},[{fillStyle:"rgb(230,245,255)"},{lineWidth:1,strokeStyle:"rgb(255,255,255)"}]],["amenity",{university:1},[{lineWidth:0.5,strokeStyle:"rgb(240,225,183)"}]],["amenity",{parking:1},[{fillStyle:"rgb(240,235,193)"}]],["highway",{pedestrian:1},[{fillStyle:"rgb(255,255,255)"},{lineWidth:2,strokeStyle:"rgb(168,148,148)"}]],["tourism",true,[{dash:[3,3],lineWidth:2,strokeStyle:"rgb(255,255,0)"}]],["aeroway",{terminal:1},[{fillStyle:"rgb(190,210,190)"},{lineWidth:1,strokeStyle:"rgb(127,137,127)"}]],["historic",{memorial:1,monument:1,fort:1,castle:1},[{fillStyle:"rgb(255,190,190)"},{lineWidth:1,strokeStyle:"rgb(167,120,120)"}]],["historic",{ship:1,wreck:1},[{fillStyle:"rgb(255,190,235)"}]],["railway",{station:1},[{fillStyle:"rgb(210,195,195)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["natural",{water:1,bay:1},[{fillStyle:"rgb(158,199,243)"},{lineWidth:1,strokeStyle:"rgb(158,199,243)"}]],["building",true,[{fillStyle:"rgb(200,200,200)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["building:part",true,[{fillStyle:"rgb(200,200,200)"},{lineWidth:1,strokeStyle:"rgb(127,127,127)"}]],["start_date",true,[{dash:[2,5],lineWidth:3,strokeStyle:"rgb(255,0,0)"}]]],LineString:[["waterway",{canal:1},[{lineCap:"butt",lineWidth:3,strokeStyle:"rgb(158,199,243)"}]],["waterway",{river:1},[{lineWidth:1.5,strokeStyle:"rgb(126,159,194)"}]],["waterway",{stream:1},[{dash:[2,2],lineWidth:1.5,strokeStyle:"rgb(126,159,194)"}]],["route",{ferry:1},[{dash:[4,4],lineWidth:2,strokeStyle:"rgb(126,159,194)"}]],["highway",{pedestrian:1},[{lineWidth:5,strokeStyle:"rgb(255,255,255)"}]],["highway",{footway:1,pedestrian:1,path:1},[{lineWidth:2,strokeStyle:"rgb(198,178,178)"}]],["highway",{steps:1},[{dash:[1.5,1.5],lineWidth:3,strokeStyle:"rgb(168,148,148)"}]],["highway",{service:1},[{lineWidth:4,strokeStyle:"rgb(168,168,168)"},{lineWidth:2.5,strokeStyle:"rgb(208,208,208)"}]],["highway",{track:1},[{lineWidth:3.5,strokeStyle:"rgb(168,168,168)"},{lineWidth:2.5,strokeStyle:"rgb(250,250,208)"}]],["highway",{residential:1,unclassified:1},[{lineWidth:4,strokeStyle:"rgb(200,200,200)"},{lineWidth:2.5,strokeStyle:"rgb(255,255,255)"}]],["highway",{tertiary:1},[{lineWidth:5,strokeStyle:"rgb(200,200,200)"},{lineWidth:3.5,strokeStyle:"rgb(255,255,235)"}]],["railway",{subway:1},[{globalAlpha:0.2,lineWidth:3,strokeStyle:"rgb(100,100,100)"},{globalAlpha:1}]],["railway",{rail:1,preserved:1,monorail:1,narrow_gauge:1},[{lineWidth:3,strokeStyle:"rgb(100,100,100)"}]],["highway",{secondary:1,secondary_link:1,primary:1,primary_link:1},[{lineCap:"round",lineWidth:6,strokeStyle:"rgb(171,158,137)"}]],["highway",{motorway:1,motorway_link:1,trunk:1,trunk_link:1},[{lineWidth:7,strokeStyle:"rgb(188,149,28)"}]],["aeroway",{runway:1},[{lineWidth:10,strokeStyle:"rgb(100,130,100)"}]],["aeroway",{taxiway:1},[{lineWidth:4.5,strokeStyle:"rgb(100,130,100)"}]],["railway",{subway:1},[{lineCap:"butt",globalAlpha:0.3,dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(255,255,255)"},{globalAlpha:1}]],["railway",{rail:1,narrow_gauge:1},[{dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(255,255,255)"}]],["railway",{preserved:1},[{dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(200,200,200)"}]],["railway",{monorail:1},[{dash:[1,2,4,2],lineWidth:1.5,strokeStyle:"rgb(200,200,200)"}]],["highway",{secondary:1,secondary_link:1},[{lineCap:"round",lineWidth:4.5,strokeStyle:"rgb(255,250,115)"}]],["highway",{primary:1,primary_link:1},[{lineWidth:4,strokeStyle:"rgb(255,230,95)"}]],["highway",{motorway:1,motorway_link:1,trunk:1,trunk_link:1},[{lineWidth:5,strokeStyle:"rgb(242,191,36)"}]],["aeroway",{runway:1},[{lineWidth:8,strokeStyle:"rgb(150,180,150)"}]],["aeroway",{taxiway:1},[{lineWidth:2.5,strokeStyle:"rgb(150,180,150)"}]],["railway",{tram:1},[{globalAlpha:0.4,dash:[3,3],lineWidth:1.5,strokeStyle:"rgb(0,0,0)"},{globalAlpha:1}]],["access",{permissive:1},[{dash:[1,2],lineWidth:1,strokeStyle:"rgb(100,200,100)"}]],["access",{"private":1,residents:1},[{dash:[1,2],lineWidth:1,strokeStyle:"rgb(200,100,100)"}]],["building:part",true,[{lineWidth:1,strokeStyle:"rgb(127,127,255)"}]],["start_date",true,[{dash:[2,5],lineWidth:3,strokeStyle:"rgb(255,0,0)"}]]]};function e(O,h){var w=O.concat(h),Q=[],P={};for(i in w){if(w.hasOwnProperty(i)){if(!(w[i] in P)){P[w[i]]=true;Q.push(w[i])}}}return Q}function c(h,O,w){return h+"_"+O+"_"+w}function l(Q){if(Q===null){return}U=Q.data;var V,S={0:1},U,R,P;if(Q.v&&Q.v>=2){V=Q.idx}else{V={};for(R=0;R<U.length;++R){for(P in U[R].tags){if(P in V){V[P].push(R)}else{V[P]=[R]}}}}for(R=0;R<U.length;++R){if("layer" in U[R].tags){S[U[R].tags.layer]=1}}x[c(Q.x,Q.y,Q.z)]={data:Q.data,building:{},f:Q.f||{},idx:V,lay:S};var U=Q.data,w,h=Q.x,T=Q.y,O;if(Q.z>=q){for(w=Q.z;w>=m;w--){O=x[c(h,T,w)];if(w<q&&O&&O.data){for(R=0;R<U.length;++R){if("osm_id" in U[R].tags&&("building" in U[R].tags||"building:part" in U[R].tags)&&!(U[R].tags.osm_id in O.building)){for(P in U[R].tags){if(P in O.idx){O.idx[P].push(O.data.length)}else{O.idx[P]=[O.data.length]}}O.data.push(U[R]);O.building[U[R].tags.osm_id]=1}}}h=Math.floor(h/2);T=Math.floor(T/2)}}else{}p(this.csx,this.csy,this.csz,this)}function D(Q,T){if(u){if(Q.length>0){var W=(Q[0][0]-a)*128/I,U=128-(Q[0][1]-o)*128/g,aa,Z,S=0,R=u.length,Y=0,X,V,h,P,O,w;for(O=1;O<Q.length;++O){T.moveTo(W,U);P=-Y;aa=(Q[O][0]-a)*128/I;Z=128-(Q[O][1]-o)*128/g;X=aa-W;V=Z-U;h=Math.sqrt(X*X+V*V);X/=h;V/=h;w=false;while(true){P+=u[S];if(P>h){w=true;Y=P-h;P=h}T[S%2?"moveTo":"lineTo"](P*X+W,P*V+U);if(w){break}S=(S+1)%R}W=aa;U=Z}}}else{if(Q.length>0){T.moveTo((Q[0][0]-a)*128/I,128-(Q[0][1]-o)*128/g);for(O=1;O<Q.length;++O){T.lineTo((Q[O][0]-a)*128/I,128-(Q[O][1]-o)*128/g)}}}}function K(Q,R){var T=null,X={},h=R.div.offset(),V=Q.pageX-h.left,U=Q.pageY-h.top,S=R.csca.data||[],w,O,W,Z="";function P(ae,af,aa){var ac,ab,ad;for(j=1;j<ae.length;++j){ac=(ae[j][0]-a)*128/I-V;ab=128-(ae[j][1]-o)*128/g-U;ad=ac*ac+ab*ab;if((T===null||ad<T)&&("name" in aa.tags||"addr:street" in aa.tags)){T=ad;X=aa}}}a=R.csx*60/(1<<R.csz);o=90-(((R.csy+1)*60)/(1<<R.csz));N=(R.csx+1)*60/(1<<R.csz);n=90-((R.csy*60)/(1<<R.csz));I=N-a;g=n-o;if(a>180){a-=360}for(O=0;O<S.length;++O){w=S[O];z(w,"Polygon",null,P);if(w.geo.type=="GeometryCollection"){z(w,"Line",null,P)}}W=X.tags||{};if("name" in W){Z=W.name;if("loc_name" in W){Z+=' "'+W.loc_name+'"'}if("artist_name" in W){Z+=" ("+W.artist_name+")"}return Z}if("addr:street" in W){Z=W["addr:street"];if("addr:housenumber" in W){Z=W["addr:housenumber"]+" "+Z}return Z}var Y=["landuse","historic","highway","building"];for(O=0;O<Y.length;++O){if(Y[O] in W){return Y[O]+" "+W[Y[O]]}}return null}function z(h,P,S,R){var O,w,Q;switch(h.geo.type){case"Polygon":R(h.geo.coordinates[0],S,h);break;case"LineString":R(h.geo.coordinates,S,h);break;case"MultiLineString":for(O=0;O<h.geo.coordinates.length;O++){R(h.geo.coordinates[O],S,h)}break;case"MultiPolygon":for(O=0;O<h.geo.coordinates.length;O++){R(h.geo.coordinates[O][0],S,h)}break;case"GeometryCollection":Q=h.geo.geometries;for(w=0;w<Q.length;w++){if(P==="Polygon"){switch(Q[w].type){case"Polygon":R(Q[w].coordinates[0],S,h);break;case"MultiPolygon":for(O=0;O<Q[w].coordinates.length;O++){R(Q[w].coordinates[O][0],S,h)}break}}else{switch(Q[w].type){case"LineString":R(Q[w].coordinates,S,h);break;case"MultiLineString":for(O=0;O<Q[w].coordinates.length;O++){R(Q[w].coordinates[O],S,h)}break}}}break}}function p(X,W,V,R,P){var U=R.ctx,O=false;a=X*60/(1<<V);o=90-(((W+1)*60)/(1<<V));N=(X+1)*60/(1<<V);n=90-((W*60)/(1<<V));I=N-a;g=n-o;if(a>180){a-=360}function aa(ae){var ag,af,ad,ah,ak,ab,ai=ae.data,ac,aj;U.lineWidth=1;U.fillStyle="rgb(158,199,243)";U.fillRect(0,0,128,128);for(ak in G){for(ab=0;ab<G[ak].length;ab++){U.beginPath();if(!(G[ak][ab][0] in ae.idx)){continue}u=G[ak][ab][2][0].dash||null;aj=ae.idx[G[ak][ab][0]];for(ag=0;ag<aj.length;++ag){ac=ai[aj[ag]];if((ak!==ac.geo.type&&("Multi"+ak)!==ac.geo.type&&ac.geo.type!=="GeometryCollection")||!(G[ak][ab][1]===true||ac.tags[G[ak][ab][0]] in G[ak][ab][1])){continue}z(ac,ak,U,D)}ah=G[ak][ab][2];for(ag=0;ag<ah.length;ag++){for(af in ah[ag]){if(af!="dash"){U[af]=ah[ag][af]}}if("strokeStyle" in ah[ag]){U.stroke()}if("fillStyle" in ah[ag]){U.fill()}}}}}R.csx=X;R.csy=W;R.csz=V;var w,h=X,T=W,Q,S,Z,Y;for(w=V;w>=m;w--){Q=x[c(h,T,w)];if(Q&&Q.data&&!P){if(R.csca){S=R.csca.data;if(M&&"start_date" in R.csca.idx){Y=R.csca.idx.start_date;for(i=0;i<Y.length;++i){Z=S[Y[i]].tags.start_date;if(Z in d){d[Z]--;if(d[Z]==0){delete d[Z]}}}}if(C&&V>q){Y=e(R.csca.idx["building:levels"]||[],R.csca.idx.height||[]);for(i=0;i<Y.length;++i){if("osm_id" in S[Y[i]].tags){Z=S[Y[i]].tags.osm_id;if(Z in v){v[Z]--;if(v[Z]==0){delete v[Z]}}}}}}aa(Q);R.csca=Q;S=Q.data;if(M&&"start_date" in Q.idx){Y=Q.idx.start_date;for(i=0;i<Y.length;++i){Z=S[Y[i]].tags.start_date;d[Z]=(d[Z]||0)+1}}if(C&&V>q){Y=e(Q.idx["building:levels"]||[],Q.idx.height||[]);for(i=0;i<Y.length;++i){if("osm_id" in S[Y[i]].tags){Z=S[Y[i]].tags.osm_id;v[Z]=(v[Z]||0)+1;if(!(Z in B)){B[Z]=S[Y[i]]}}}}if(F!==null){Y=e(Q.idx["building:levels"]||[],Q.idx.height||[]);for(i=0;i<Y.length;++i){if("osm_id" in S[Y[i]].tags){Z=S[Y[i]].tags.osm_id;if(!(Z in v)){v[Z]=true;Z=S[Y[i]];if(Z.geo.type==="Polygon"||Z.geo.type==="LineString"){O=true;y(Z.geo.coordinates,(Z.tags["building:min_level"]*3)||Z.tags.min_height||0,(Z.tags["building:levels"]*3)||Z.tags.height)}}}}}R.can.show();if(O){A()}if(V<q||w>=q){return}}h=Math.floor(h/2);T=Math.floor(T/2)}R.debug.html("tiles/jsontile.php?x="+X+"&y="+W+"&z="+V);$.ajax({url:"tiles/jsontile.php?x="+X+"&y="+W+"&z="+V+(P===true?"&action=purge":""),dataType:"json",success:l,context:R})}function E(h,P,O){glArrList=[];f=[];J=h;F=P;s=O;var Q,w;k=0;b=0;Q=new Float32Array(J*9);w=new Float32Array(J*9);glArrList.push({v:Q,n:w});C=false}function A(){var O,w,Q,h,P;if(glArrList.length>f.length||k>b){P=f.length-1;P=P<0?0:P;for(O=P;O<glArrList.length;++O){if(O>=f.length){Q=F.createBuffer();h=F.createBuffer();f.push({v:Q,n:h})}else{Q=f[O].v;h=f[O].n}F.bindBuffer(F.ARRAY_BUFFER,Q);F.bufferData(F.ARRAY_BUFFER,glArrList[O].v,F.STATIC_DRAW);F.bindBuffer(F.ARRAY_BUFFER,h);F.bufferData(F.ARRAY_BUFFER,glArrList[O].n,F.STATIC_DRAW)}b=k}w=f.length-1;for(O=0;O<=w;++O){F.bindBuffer(F.ARRAY_BUFFER,f[O].n);F.vertexAttribPointer(s.normalPosAttrib,3,F.FLOAT,false,0,0);F.bindBuffer(F.ARRAY_BUFFER,f[O].v);F.vertexAttribPointer(s.vertexPosAttrib,3,F.FLOAT,false,0,0);F.drawArrays(F.TRIANGLES,0,((O==w)?b:J)*3)}}function L(O,S){var h=O.length/9,R=J,Q,P,w,S;Q=glArrList.length-1;if(k+h<=R){glArrList[Q].v.set(O,k*9);glArrList[Q].n.set(S,k*9);k+=h}else{for(P=0;P<h;++P){for(w=0;w<9;++w){glArrList[Q].v[k*9+w]=O[P*9+w]}k++;if(k==R){k=0;glArrList.push({v:new Float32Array(J*9),n:new Float32Array(J*9)});Q++}}}if(k==R){k=0;glArrList.push({v:new Float32Array(J*9),n:new Float32Array(J*9)})}}function y(W,aa,U){var Y,P,X,T,S,R,Q,O;for(S=0;S<W.length;++S){X=W[S];R=X.length;for(T=0;T<R-1;T++){dx=X[T][0]-X[(T+1)%R][0];dy=X[T][1]-X[(T+1)%R][1];r=Math.sqrt(dx*dx+dy*dy);dx/=r;dy/=r;L([X[T][0],X[T][1],aa,X[T+1][0],X[T+1][1],aa,X[T][0],X[T][1],U],[-dy,dx,0,-dy,dx,0,-dy,dx,0]);L([X[T][0],X[T][1],U,X[T+1][0],X[T+1][1],U,X[T+1][0],X[T+1][1],aa],[-dy,dx,0,-dy,dx,0,-dy,dx,0])}}if(W.length===1&&W[0].length<=5){X=W[0];if(X.length==4){L([X[0][0],X[0][1],U,X[1][0],X[1][1],U,X[2][0],X[2][1],U],[0,0,1,0,0,1,0,0,1])}else{L([X[0][0],X[0][1],U,X[1][0],X[1][1],U,X[2][0],X[2][1],U,X[0][0],X[0][1],U,X[2][0],X[2][1],U,X[3][0],X[3][1],U],[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1])}return}var Z=[],V=[];X=W[0];R=X.length-1;for(T=0;T<R;T++){Z.push(new p2t.Point(X[T][0],X[T][1]))}var ac=new p2t.SweepContext(Z);for(S=1;S<W.length;++S){X=W[S];R=X.length-1;var w=[];for(T=0;T<R;T++){w.push(new p2t.Point(X[T][0],X[T][1]))}ac.AddHole(w)}p2t.sweep.Triangulate(ac);Y=ac.GetTriangles();for(T=0;T<Y.length;++T){var ab=[Y[T].GetPoint(0),Y[T].GetPoint(1),Y[T].GetPoint(2)];L([ab[0].x,ab[0].y,U,ab[1].x,ab[1].y,U,ab[2].x,ab[2].y,U],[0,0,1,0,0,1,0,0,1])}}return{update:p,detectPointer:K,ref_z:function(){return v},zbuild:function(){return B},registerWebGLBuildingData:E,renderWebGLBuildingData:A}})();